---
- name: Create nodeusr account to run cgroup_exporter
  ansible.builtin.user:
    name: nodeusr
    shell: /sbin/nologin
    home: /var/lib/node_exporter
    uid: "{{ prometheus_exporter_uid }}"
  tags:
    - cgroups_exporter

- name: Install git
  ansible.builtin.package:
    name: git
    state: present
  tags:
    - cgroups_exporter

- name: Extract go downloaded tarball
  ansible.builtin.unarchive:
    src: https://golang.org/dl/go1.17.2.linux-amd64.tar.gz
    dest: /tmp
    owner: nodeusr
    group: nodeusr
    mode: 0755
    remote_src: yes
  tags:
    - cgroups_exporter

- name: Clone a github repository
  ansible.builtin.git:
    repo: https://github.com/dstdev/cgroups_exporter
    dest: /tmp/cgroups_exporter
    clone: yes
    update: yes
  tags:
    - cgroups_exporter

- name: Compile and install cgroup_exporter
  become: yes
  ansible.builtin.shell: "/tmp/go/bin/go build && chown nodeusr:nodeusr cgroups_exporter && cp -f /tmp/cgroups_exporter/cgroups_exporter {{ cgroup_exporter_executable_path }}"
  args:
    chdir: /tmp/cgroups_exporter
  environment:
    GOROOT: "/tmp/go"
  tags:
    - cgroups_exporter

- name: Create systemd service file
  ansible.builtin.template:
    src: cgroup_exporter.service.j2
    dest: /etc/systemd/system/cgroup_exporter.service
  tags:
    - cgroups_exporter

- name: Enable the systemd service file manually
  ansible.builtin.file:
    state: link
    src: /etc/systemd/system/cgroup_exporter.service
    dest: /etc/systemd/system/multi-user.target.wants/cgroup_exporter.service
  tags:
    - cgroups_exporter

- name: Start the systemd service file if this is not a chroot
  ansible.builtin.service:
    name: cgroup_exporter
    state: started
  when: ansible_is_chroot == False
  tags:
    - cgroups_exporter

- name: cleanup tmp files
  become: yes
  shell: "rm -rf /tmp/cgroups_exporter && rm -rf /tmp/go"
  args:
    chdir: /tmp
  tags:
    - cleanup
    - cgroups_exporter
