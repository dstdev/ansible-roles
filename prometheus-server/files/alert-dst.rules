groups:
  - name: infiniband_rules
    rules:
      - alert: infiniband_bad_status_error
        annotations:
          description: "{{ $labels.instance }} has infiniband_bad_status_error."
          summary: Bad status error catched from STDERR by ibqueryerrors.
          priority: P2
        expr: (infiniband_bad_status_error) > 0
        for: 5m
        labels:
          severity: critical
      - alert: infiniband_query_failed_error
        annotations:
          description: "{{ $labels.instance }} has infiniband_query_failed_error."
          summary: Failed query catched from STDERR by ibqueryerrors.
          priority: P2
        expr: (infiniband_query_failed_error) > 0
        for: 5m
        labels:
          severity: critical
      - alert: infiniband_mad_rpc_failed_error
        annotations:
          description: "{{ $labels.instance }} has infiniband_mad_rpc_failed_error."
          summary: ibwarn_mad_rpc error catched from STDERR by ibqueryerrors.
          priority: P3
        expr: (infiniband_mad_rpc_failed_error) > 0
        for: 5m
        labels:
          severity: critical
      - alert: infiniband_query_cap_mask_error
        annotations:
          description: "{{ $labels.instance }} has infiniband_query_cap_mask_error."
          summary: ibwarn_query_cap_mask error catched from STDERR by ibqueryerrors.
          priority: P3
        expr: (infiniband_query_cap_mask_error) > 0
        for: 5m
        labels:
          severity: critical
      - alert: infiniband_print_error
        annotations:
          description: "{{ $labels.instance }} has infiniband_print_error ."
          summary: ibwarn_print_error catched from STDERR by ibqueryerrors.
          priority: P3
        expr: (infiniband_print_error) > 0
        for: 5m
        labels:
          severity: critical
      - alert: infiniband_symbolerrorcounter_total
        annotations:
          description: '{{ $labels.instance }} infiniband_symbolerrorcounter_total increase {{ printf "%.0f" $value }} in 5m.'
          summary: Total number of minor link errors detected on one or more physical lanes.
          priority: P3
        expr: increase(infiniband_symbolerrorcounter_total[5m]) > 1000
        for: 5m
        labels:
          severity: critical
      - alert: infiniband_portmalformedpkterrors_total
        annotations:
          description: '{{ $labels.instance }} infiniband_portmalformedpkterrors_total  increase {{ printf "%.0f" $value }} in 5m.'
          summary: Total number of malformed packets
          priority: P3
        expr: increase(infiniband_portmalformedpkterrors_total [5m]) > 100
        for: 5m
        labels:
          severity: critical
      - alert: infiniband_portxmitdiscards_total
        annotations:
          description: '{{ $labels.instance }} infiniband_portxmitdiscards_total increase {{ printf "%.0f" $value }} in 5m.'
          summary: Total number of outbound packets discarded by the port because the port is down or congested.
          priority: P3
        expr: increase(infiniband_portxmitdiscards_total[5m]) > 100
        for: 5m
        labels:
          severity: critical
      - alert: infiniband_portswhoqlifetimelimitdiscards_total
        annotations:
          description: '{{ $labels.instance }} infiniband_portswhoqlifetimelimitdiscards_total increase {{ printf "%.0f" $value }} in 5m.'
          summary: The number of packets dropped by running in a head-of-Queue timeoutoften caused by congestions, possibly by credit Loops.
          priority: P3
        expr: increase(infiniband_portxinfiniband_portswhoqlifetimelimitdiscards_total[5m]) > 100
        for: 5m
        labels:
          severity: critical
      - alert: infiniband_portrcverrors_total
        annotations:
          description: '{{ $labels.instance }} infiniband_portrcverrors_total increase {{ printf "%.0f" $value }} in 5m.'
          summary: Total number of packets containing an error that were received on the port.
          priority: P3
        expr: increase(infiniband_portrcverrors_total[5m]) > 100
        for: 5m
        labels:
          severity: critical
      - alert: infiniband_portbufferoverrunerrors_total
        annotations:
          description: '{{ $labels.instance }} infiniband_portbufferoverrunerrors_total increase {{ printf "%.0f" $value }} in 60m.'
          summary: Total number of packets received on the part discarded due to buffer overrrun.
          priority: P3
        expr: increase(infiniband_portbufferoverrunerrors_total[60m]) > 1000
        for: 60m
        labels:
          severity: critical
      - alert: infiniband_portlocalphysicalerrors_total
        annotations:
          description: '{{ $labels.instance }} infiniband_portlocalphysicalerrors_total increase {{ printf "%.0f" $value }} in 60m.'
          summary: Total number of packets received with physical error like CRC error.
          priority: P3
        expr: increase(infiniband_portlocalphysicalerrors_total[60m]) > 1000
        for: 60m
        labels:
          severity: critical
      - alert: infiniband_portrcvremotephysicalerrors_total
        annotations:
          description: '{{ $labels.instance }} infiniband_portrcvremotephysicalerrors_total increase {{ printf "%.0f" $value }} in 60m.'
          summary: Total number of packets marked with the EBP delimiter received on the port.
          priority: P3
        expr: increase(infiniband_portrcvremotephysicalerrors_total[60m]) > 1000
        for: 60m
        labels:
          severity: critical
      - alert: infiniband_portinactivediscards_total
        annotations:
          description: '{{ $labels.instance }} infiniband_portinactivediscards_total increase {{ printf "%.0f" $value }} in 60m.'
          summary: Total number of packets discarded due to the port being in the inactive state.
          priority: P3
        expr: increase(infiniband_portinactivediscards_total[60m]) > 1000
        for: 60m
        labels:
          severity: critical
      - alert: infiniband_portdlidmappingerrors_total
        annotations:
          description: '{{ $labels.instance }} infiniband_portdlidmappingerrors_total increase {{ printf "%.0f" $value }} in 60m.'
          summary: Total number of packets on the port that could not be forwared by the switch due to DLID mapping errors.
          priority: P3
        expr: increase(infiniband_portdlidmappingerrors_total[60m]) > 1000
        for: 60m
        labels:
          severity: critical
      - alert: infiniband_linkerrorrecoverycounter_total
        annotations:
          description: '{{ $labels.instance }} infiniband_linkerrorrecoverycounter_total increase {{ printf "%.0f" $value }} in 60m.'
          summary: Total number of times the Port Training state machine has successfully completed the link error recovery process.
          priority: P3
        expr: increase(infiniband_linkerrorrecoverycounter_total[60m]) > 1000
        for: 60m
        labels:
          severity: critical
      - alert: infiniband_locallinkintegrityerrors_total
        annotations:
          description: '{{ $labels.instance }} infiniband_locallinkintegrityerrors_total increase {{ printf "%.0f" $value }} in 60m.'
          summary: The number of times that the count of local physical errors exceeded the threshold specified by LocalPhyErrors.
          priority: P3
        expr: increase(infiniband_locallinkintegrityerrors_total[60m]) > 1000
        for: 60m
        labels:
          severity: critical
      - alert: infiniband_vl15dropped_total
        annotations:
          description: '{{ $labels.instance }} infiniband_vl15dropped_total increase {{ printf "%.0f" $value }} in 60m.'
          summary: The number of incoming VL15 packets dropped due to resource limitations (for example, lack of buffers) in the port.
          priority: P3
        expr: increase(infiniband_vl15dropped_total[60m]) > 1000
        for: 60m
        labels:
          severity: critical
      - alert: infiniband_portneighbormtudiscards_total
        annotations:
          description: '{{ $labels.instance }} infiniband_portneighbormtudiscards_total increase {{ printf "%.0f" $value }} in 60m.'
          summary: Total outbound packets discarded by the port because packet length exceeded the neighbor MTU.
          priority: P3
        expr: increase(infiniband_portneighbormtudiscards_total[60m]) > 1000
        for: 60m
        labels:
          severity: critical
      - alert: infiniband_portrcvconstrainterrors_total
        annotations:
          description: '{{ $labels.instance }} infiniband_portrcvconstrainterrors_total increase {{ printf "%.0f" $value }} in 60m.'
          summary: Total number of packets received on the port that are discarded for any of the following reasons. FilterRawInbound is true and packet is raw - PartitionEnforcementInbound is true and packet fails partition key check, IP version check, or transport header version check.
          priority: P3
        expr: increase(infiniband_portrcvconstrainterrors_total[60m]) > 1000
        for: 60m
        labels:
          severity: critical
      - alert: infiniband_excessivebufferoverrunerrors_total
        annotations:
          description: '{{ $labels.instance }} infiniband_excessivebufferoverrunerrors_total increase {{ printf "%.0f" $value }} in 60m.'
          summary: The number of times that consecutive flow control update periods had at least one overrun error.
          priority: P3
        expr: increase(infiniband_excessivebufferoverrunerrors_total[60m]) > 1000
        for: 60m
        labels:
          severity: critical

      - alert: node_infiniband_interfaces_down
        annotations:
          description: 'All IB interfaces show as inactive on {{ $labels.instance }}'
          summary: The number of IB interfaces went down.
          priority: P3
        expr: min(node_infiniband_state_id) > 1
        for: 5m
        labels:
          severity: critical

  - name: lustre_rules
    rules:
      - alert: lustre_available_kilobytes is less than 10%
        annotations:
          description: "Number of kilobytes readily available in the pool"
          summary: lustre_available_kilobytes on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available space left
          priority: P2
        expr: (lustre_available_kilobytes / lustre_capacity_kilobytes * 100 < 10 and lustre_available_kilobytes == 0)
        for: 1h
        labels:
          severity: critical
      - alert: lustre_free_kilobytes is less than 10%
        annotations:
          description: "Number of kilobytes readily available in the pool"
          summary: lustre_free_kilobytes on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available space left
          priority: P2
        expr: (lustre_free_kilobytes / lustre_capacity_kilobytes * 100 < 10 and lustre_free_kilobytes == 0)
        for: 1h
        labels:
          severity: critical
      - alert: lustre_free_page_low
        annotations:
          description: "{{ $labels.instance }} lustre_free_page_low"
          summary: Lowest number of free pages reached.
          priority: P3
        expr: (lustre_free_page_low) > 0
        for: 1h
        labels:
          severity: critical
      - alert: lustre_degraded
        annotations:
          description: "{{ $labels.instance }} lustre_degraded"
          summary: Binary indicator as to whether or not the pool is degraded - 0 for not degraded  1 for degraded.
          priority: P2
        expr: (lustre_degraded) > 0
        for: 1h
        labels:
          severity: critical
      - alert: lustre_exports_dirty_total
        annotations:
          description: '{{ $labels.instance }} lustre_exports_dirty_total increase {{ printf "%.0f" $value }} in 1h.'
          summary: Total number of exports that have been marked dirty.
          priority: P3
        expr: increase(lustre_exports_dirty_total[60m]) > 0
        for: 1h
        labels:
          severity: critical
      - alert: lustre_grows_failure_total increase
        annotations:
          description: '{{ $labels.instance }} lustre_grows_failure_total increase {{ printf "%.0f" $value }} in 1h.'
          summary: Total number of failures while attempting to add pages increase.
          priority: P3
        expr: increase(lustre_grows_failure_total[60m]) > 0
        for: 1h
        labels:
          severity: critical
      - alert: lustre_health_check
        annotations:
          description: "{{ $labels.instance }} unhealthy"
          summary: Current health status for the indicated instance 1 refers to 'healthy'  0 refers to 'unhealthy'.
          priority: P2
        expr: (lustre_health_check) < 1
        for: 60m
        labels:
          severity: critical
      - alert: lustre_inodes_free is less than 10%
        annotations:
          description: "The number of inodes (objects) available"
          summary: lustre_inodes_free on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available space left
          priority: P2
        expr: (lustre_inodes_free / lustre_inodes_maximum * 100 < 10 and lustre_available_kilobytes == 0)
        for: 1h
        labels:
          severity: critical
      - alert: lustre_lock_contended
        annotations:
          description: "{{ $labels.instance }} lustre_lock_contended is higher than 1000"
          summary: Number of contended locks.
          priority: P3
        expr: (lustre_lock_contended) > 1000
        for: 1h
        labels:
          severity: critical
      - alert: lustre_lock_contention_seconds
        annotations:
          description: "{{ $labels.instance }} lustre_lock_contention_seconds is higher than 60s"
          summary: Time in seconds during which locks were contended.
          priority: P3
        expr: (lustre_lock_contention_seconds) > 60
        for: 1h
        labels:
          severity: critical
      - alert: lustre_lock_count
        annotations:
          description: "{{ $labels.instance }} lustre_lock_count is higher than 5000"
          summary: Number of locks.
          priority: P3
        expr: (lustre_lock_count) > 5000
        for: 1h
        labels:
          severity: critical
      - alert: lustre_lock_timeout
        annotations:
          description: '{{ $labels.instance }} lustre_lock_timeout increase {{ printf "%.0f" $value }} in 1h.'
          summary: Number of lock timeouts increase of more than 100  per hour
          priority: P3
        expr: increase(lustre_lock_timeout[60m]) > 100
        for: 1h
        labels:
          severity: critical

  - name: smartmon_rules
    rules:
      - alert: NodeDiskErrs
        annotations:
          description: "{{ $labels.instance }} has encountered disk errors."
          summary: Disk encounted errors smartmon_offline_uncorrectable_raw_value is {{ printf "%.0f" $value }}.
          priority: P2
        expr: (smartmon_offline_uncorrectable_raw_value) > 0
        for: 5m
        labels:
          severity: critical

      - alert: NodeDiskFailed
        annotations:
          description: "{{ $labels.instance }} has disks failing."
          summary: Disk encounted errors smartmon_end_to_end_error_raw_value is {{ printf "%.0f" $value }}.
          priority: P2
        expr: (smartmon_end_to_end_error_raw_value) > 0
        for: 5m
        labels:
          severity: critical

  - name: Exporter Alerts
    rules:
      - alert: Node down
        expr: up{job="node"} == 0
        for: 3m
        labels:
          severity: critical
        annotations:
          title: Node {{ $labels.instance }} is down
          description: Failed to scrape {{ $labels.job }} on {{ $labels.instance }} for more than 3 minutes. Node could be down.
          priority: P2

      - alert: high_cpu_load
        expr: node_load1 > 60
        for: 30m
        labels:
          severity: warning
        annotations:
          summary: "Server under high load"
          description: "Host is under high load, the avg load 1m is at {{ $value}}. Reported by instance {{ $labels.instance }} of job {{ $labels.job }}."
          priority: P4

      - alert: high_memory_load
        expr: (sum(node_memory_MemTotal_bytes) - sum(node_memory_MemFree_bytes + node_memory_Buffers_bytes + node_memory_Cached_bytes) ) / sum(node_memory_MemTotal_bytes) * 100 > 85
        for: 30s
        labels:
          severity: warning
        annotations:
          summary: "Server memory is almost full"
          description: "Host memory usage is {{ humanize $value}}%. Reported by instance {{ $labels.instance }} of job {{ $labels.job }}."
          priority: P4

      - alert: high_storage_load
        expr: (node_filesystem_size_bytes{instance="10.9.76.87:9100",fstype="nfs"} - node_filesystem_free_bytes{instance="10.9.76.87:9100",fstype="nfs"}) / node_filesystem_size_bytes{instance="10.9.76.87:9100",fstype="nfs"} * 100 > 95
        for: 30s
        labels:
          severity: warning
        annotations:
          summary: "Server storage is almost full"
          description: "Host storage usage is {{ humanize $value}}%. Reported by instance {{ $labels.instance }} of job {{ $labels.job }}."
          priority: P4

      - alert: PrometheusTargetScrapingSlow
        expr: prometheus_target_interval_length_seconds{quantile="0.9"} > 70
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "Prometheus target scraping slow (instance {{ $labels.instance }})"
          description: "Prometheus is scraping exporters slowly\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}"
          priority: P4

      - alert: PrometheusNotConnectedToAlertmanager
        expr: prometheus_notifications_alertmanagers_discovered < 1
        for: 5m
        labels:
          severity: critical
        annotations:
          summary: "Prometheus not connected to alertmanager (instance {{ $labels.instance }})"
          description: "Prometheus cannot connect the alertmanager\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}"
          priority: P1

  - name: Awesome Alert Rules
    rules:
      - alert: HostOutOfMemory
        expr: node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes * 100 < 10
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: Host out of memory (instance {{ $labels.instance }})
          description: "Node memory is filling up (< 10% left)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
          priority: P2

      - alert: HostMemoryUnderMemoryPressure
        expr: rate(node_vmstat_pgmajfault[1m]) > 1000
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: Host memory under memory pressure (instance {{ $labels.instance }})
          description: "The node is under heavy memory pressure. High rate of major page faults\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
          priority: P4

      - alert: HostUnusualDiskReadRate
        expr: sum by (instance) (rate(node_disk_read_bytes_total[2m])) / 1024 / 1024 > 50
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: Host unusual disk read rate (instance {{ $labels.instance }})
          description: "Disk is probably reading too much data (> 50 MB/s)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
          priority: P4

      - alert: HostUnusualDiskWriteRate
        expr: sum by (instance) (rate(node_disk_written_bytes_total[2m])) / 1024 / 1024 > 50
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: Host unusual disk write rate (instance {{ $labels.instance }})
          description: "Disk is probably writing too much data (> 50 MB/s)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
          priority: P4

      # Please add ignored mountpoints in node_exporter parameters like
      # "--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|run)($|/)".
      # Same rule using "node_filesystem_free_bytes" will fire when disk fills for non-root users.
      - alert: HostOutOfDiskSpace
        expr: (node_filesystem_avail_bytes * 100) / node_filesystem_size_bytes < 10 and ON (instance, device, mountpoint) node_filesystem_readonly == 0
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: Host out of disk space (instance {{ $labels.instance }})
          description: "Disk is almost full (< 10% left)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
          priority: P2

      # Please add ignored mountpoints in node_exporter parameters like
      # "--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|run)($|/)".
      # Same rule using "node_filesystem_free_bytes" will fire when disk fills for non-root users.
      - alert: HostDiskWillFillIn24Hours
        expr: (node_filesystem_avail_bytes * 100) / node_filesystem_size_bytes < 10 and ON (instance, device, mountpoint) predict_linear(node_filesystem_avail_bytes{fstype!~"tmpfs"}[1h], 24 * 3600) < 0 and ON (instance, device, mountpoint) node_filesystem_readonly == 0
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: Host disk will fill in 24 hours (instance {{ $labels.instance }})
          description: "Filesystem is predicted to run out of space within the next 24 hours at current write rate\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
          priority: P3

      - alert: HostOutOfInodes
        expr: node_filesystem_files_free{mountpoint ="/rootfs"} / node_filesystem_files{mountpoint="/rootfs"} * 100 < 10 and ON (instance, device, mountpoint) node_filesystem_readonly{mountpoint="/rootfs"} == 0
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: Host out of inodes (instance {{ $labels.instance }})
          description: "Disk is almost running out of available inodes (< 10% left)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
          priority: P2

      - alert: HostInodesWillFillIn24Hours
        expr: node_filesystem_files_free{mountpoint ="/rootfs"} / node_filesystem_files{mountpoint="/rootfs"} * 100 < 10 and predict_linear(node_filesystem_files_free{mountpoint="/rootfs"}[1h], 24 * 3600) < 0 and ON (instance, device, mountpoint) node_filesystem_readonly{mountpoint="/rootfs"} == 0
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: Host inodes will fill in 24 hours (instance {{ $labels.instance }})
          description: "Filesystem is predicted to run out of inodes within the next 24 hours at current write rate\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
          priority: P3

      - alert: HostUnusualDiskReadLatency
        expr: rate(node_disk_read_time_seconds_total[1m]) / rate(node_disk_reads_completed_total[1m]) > 0.1 and rate(node_disk_reads_completed_total[1m]) > 0
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: Host unusual disk read latency (instance {{ $labels.instance }})
          description: "Disk latency is growing (read operations > 100ms)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
          priority: P4

      - alert: HostUnusualDiskWriteLatency
        expr: rate(node_disk_write_time_seconds_total[1m]) / rate(node_disk_writes_completed_total[1m]) > 0.1 and rate(node_disk_writes_completed_total[1m]) > 0
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: Host unusual disk write latency (instance {{ $labels.instance }})
          description: "Disk latency is growing (write operations > 100ms)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
          priority: P4

      - alert: HostHighCpuLoad
        expr: 100 - (avg by(instance) (rate(node_cpu_seconds_total{mode="idle"}[2m])) * 100) > 80
        for: 0m
        labels:
          severity: warning
        annotations:
          summary: Host high CPU load (instance {{ $labels.instance }})
          description: "CPU load is > 80%\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
          priority: P4

      - alert: HostCpuStealNoisyNeighbor
        expr: avg by(instance) (rate(node_cpu_seconds_total{mode="steal"}[5m])) * 100 > 10
        for: 0m
        labels:
          severity: warning
        annotations:
          summary: Host CPU steal noisy neighbor (instance {{ $labels.instance }})
          description: "CPU steal is > 10%. A noisy neighbor is killing VM performances or a spot instance may be out of credit.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
          priority: P5

      # 1000 context switches is an arbitrary number.
      # Alert threshold depends on nature of application.
      # Please read: https://github.com/samber/awesome-prometheus-alerts/issues/58
      - alert: HostContextSwitching
        expr: (rate(node_context_switches_total[5m])) / (count without(cpu, mode) (node_cpu_seconds_total{mode="idle"})) > 1000
        for: 0m
        labels:
          severity: warning
        annotations:
          summary: Host context switching (instance {{ $labels.instance }})
          description: "Context switching is growing on node (> 1000 / s)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
          priority: P5

      - alert: HostSwapIsFillingUp
        expr: (1 - (node_memory_SwapFree_bytes / node_memory_SwapTotal_bytes)) * 100 > 80
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: Host swap is filling up (instance {{ $labels.instance }})
          description: "Swap is filling up (>80%)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
          priority: P4

      - alert: HostSystemdServiceCrashed
        expr: node_systemd_unit_state{state="failed"} == 1
        for: 0m
        labels:
          severity: warning
        annotations:
          summary: Host systemd service crashed (instance {{ $labels.instance }})
          description: "systemd service crashed\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
          priority: P3

      - alert: HostPhysicalComponentTooHot
        expr: node_hwmon_temp_celsius > 89
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: Host physical component too hot (instance {{ $labels.instance }})
          description: "Physical hardware component too hot\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
          priority: P3

      - alert: HostNodeOvertemperatureAlarm
        expr: node_hwmon_temp_crit_alarm_celsius == 1
        for: 0m
        labels:
          severity: critical
        annotations:
          summary: Host node overtemperature alarm (instance {{ $labels.instance }})
          description: "Physical node temperature alarm triggered\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
          priority: P2

      - alert: HostRaidArrayGotInactive
        expr: node_md_state{state="inactive"} > 0
        for: 0m
        labels:
          severity: critical
        annotations:
          summary: Host RAID array got inactive (instance {{ $labels.instance }})
          description: "RAID array {{ $labels.device }} is in degraded state due to one or more disks failures. Number of spare drives is insufficient to fix issue automatically.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
          priority: P3

      - alert: HostRaidDiskFailure
        expr: node_md_disks{state="failed"} > 0
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: Host RAID disk failure (instance {{ $labels.instance }})
          description: "At least one device in RAID array on {{ $labels.instance }} failed. Array {{ $labels.md_device }} needs attention and possibly a disk swap\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
          priority: P2

      - alert: HostKernelVersionDeviations
        expr: count(sum(label_replace(node_uname_info, "kernel", "$1", "release", "([0-9]+.[0-9]+.[0-9]+).*")) by (kernel)) > 1
        for: 6h
        labels:
          severity: warning
        annotations:
          summary: Host kernel version deviations (instance {{ $labels.instance }})
          description: "Different kernel versions are running\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
          priority: P4

      - alert: HostOomKillDetected
        expr: increase(node_vmstat_oom_kill[1m]) > 0
        for: 0m
        labels:
          severity: warning
        annotations:
          summary: Host OOM kill detected (instance {{ $labels.instance }})
          description: "OOM kill detected\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
          priority: P2

      - alert: HostEdacCorrectableErrorsDetected
        expr: increase(node_edac_correctable_errors_total[1m]) > 0
        for: 0m
        labels:
          severity: info
        annotations:
          summary: Host EDAC Correctable Errors detected (instance {{ $labels.instance }})
          description: "Host {{ $labels.instance }} has had {{ printf \"%.0f\" $value }} correctable memory errors reported by EDAC in the last 5 minutes.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
          priority: P3

      - alert: HostEdacUncorrectableErrorsDetected
        expr: node_edac_uncorrectable_errors_total > 0
        for: 0m
        labels:
          severity: warning
        annotations:
          summary: Host EDAC Uncorrectable Errors detected (instance {{ $labels.instance }})
          description: "Host {{ $labels.instance }} has had {{ printf \"%.0f\" $value }} uncorrectable memory errors reported by EDAC in the last 5 minutes.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
          priority: P2

      - alert: HostNetworkReceiveErrors
        expr: rate(node_network_receive_errs_total[2m]) / rate(node_network_receive_packets_total[2m]) > 0.01
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: Host Network Receive Errors (instance {{ $labels.instance }})
          description: "Host {{ $labels.instance }} interface {{ $labels.device }} has encountered {{ printf \"%.0f\" $value }} receive errors in the last five minutes.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
          priority: P3

      - alert: HostNetworkTransmitErrors
        expr: rate(node_network_transmit_errs_total[2m]) / rate(node_network_transmit_packets_total[2m]) > 0.01
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: Host Network Transmit Errors (instance {{ $labels.instance }})
          description: "Host {{ $labels.instance }} interface {{ $labels.device }} has encountered {{ printf \"%.0f\" $value }} transmit errors in the last five minutes.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
          priority: P3

      - alert: HostNetworkInterfaceSaturated
        expr: (rate(node_network_receive_bytes_total{device!~"^tap.*"}[1m]) + rate(node_network_transmit_bytes_total{device!~"^tap.*"}[1m])) / node_network_speed_bytes{device!~"^tap.*"} > 0.8
        for: 1m
        labels:
          severity: warning
        annotations:
          summary: Host Network Interface Saturated (instance {{ $labels.instance }})
          description: "The network interface \"{{ $labels.interface }}\" on \"{{ $labels.instance }}\" is getting overloaded.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
          priority: P5

      - alert: HostConntrackLimit
        expr: node_nf_conntrack_entries / node_nf_conntrack_entries_limit > 0.8
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: Host conntrack limit (instance {{ $labels.instance }})
          description: "The number of conntrack is approching limit\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
          priority: P5

      - alert: HostClockSkew
        expr: (node_timex_offset_seconds > 0.05 and deriv(node_timex_offset_seconds[5m]) >= 0) or (node_timex_offset_seconds < -0.05 and deriv(node_timex_offset_seconds[5m]) <= 0)
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: Host clock skew (instance {{ $labels.instance }})
          description: "Clock skew detected. Clock is out of sync.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
          priority: P4

      - alert: HostClockNotSynchronising
        expr: min_over_time(node_timex_sync_status[1m]) == 0 and node_timex_maxerror_seconds >= 16
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: Host clock not synchronising (instance {{ $labels.instance }})
          description: "Clock not synchronising.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
          priority: P3

      - alert: ZombieProcesses
        expr: node_processes_state{state="Z"} > 5
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "(instance {{ $labels.instance }}) has Zombie processes"
          description: "(instance {{ $labels.instance }}) has Zombie processes"
          priority: P3

  - name: Slurm Alerts
    rules:
      - alert: SlurmcontrollerDown
        expr: node_systemd_unit_state{name="slurmctld", state="failed"} > 0
        for: 5m
        annotations:
          summary: "Slurm controller has entered a failed state on (instance {{$labels.instance}})"
          description: "The slurm controller systemd service has entered a failed state"
          priority: P2

      - alert: SlurmdbdDown
        expr: node_systemd_unit_state{name="slurmdbd", state="failed"} > 0
        for: 5m
        annotations:
          summary: "Slurm Database Daemon has entered a failed state on (instance {{$labels.instance}})"
          description: "The slurmdbd systemd service has entered a failed state"
          priority: P2

      - alert: SlurmdDown
        expr: node_systemd_unit_state{name="slurmd", state="failed"} > 0
        for: 5m
        annotations:
          summary: "Slurm Daemon has entered a failed state on (instance {{$labels.instance}})"
          description: "The slurmdbd systemd service has entered a failed state"
          priority: P3

  - name: prometheus_rules
    rules:
      - alert: Watchdog
        annotations:
          description: |
            This is an alert meant to ensure that the entire alerting pipeline is functional.
            If this alert is firing, then the alertmanager is not able to reach opsgenie.
          summary: An alert that should always be firing to certify that Alertmanager is working properly.
          priority: P1
        expr: vector(1)
        for: 2m
        labels:
          severity: critical

  - name: zfs_rules
    rules:
      - alert: ZPool Health
        annotations:
          description: |
            This is an alert meant to check the status of ZFS Pools.  If it returns a value
            greater than 0 the zpool is unhealthy.
          summary: "ZFS Zpool is unhealthy on (instance {{$labels.instance}})"
          priority: P2
        expr: zfs_pool_health > 0
        for: 2m
