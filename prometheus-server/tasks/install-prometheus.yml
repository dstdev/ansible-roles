---
# http://prometheus.io/docs/introduction/getting_started/
#
- name: set internal variables for convenience
  set_fact:
    prometheus_tarball_url: "https://github.com/prometheus/prometheus/releases/download/v{{ prometheus_version }}/prometheus-{{ prometheus_version }}.{{ prometheus_platform_suffix }}.tar.gz"
    prometheus_daemon_dir: "{{ prometheus_install_path }}/prometheus-{{ prometheus_version }}.{{ prometheus_platform_suffix }}"
  tags:
    - prometheus-server
    - alert_rules

- name: download and extract prometheus tarball
  unarchive:
    src: "{{ prometheus_tarball_url }}"
    dest: "{{ prometheus_install_path }}"
    copy: no
    creates: "{{ prometheus_daemon_dir }}"
  tags:
    - prometheus-server

- name: set permissions, owner and group
  file:
    path: "{{ prometheus_install_path }}"
    state: directory
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    mode: "go-w"
    recurse: yes
  tags:
    - prometheus-server

- name: mkdir for config and data
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    mode: "u=rwx,g=rx,o="
  with_items:
    - "{{ prometheus_rule_path }}"
    - "{{ prometheus_file_sd_config_path }}"
    - "{{ prometheus_db_path }}"
  tags:
    - prometheus-server

- name: create systemd service unit
  template:
    src: prometheus.service.j2
    dest: /etc/systemd/system/prometheus.service
    owner: root
    group: root
    mode: 0644
  notify:
    - restart prometheus
  tags:
    - prometheus-server

- name: Enable prometheus service
  ansible.builtin.systemd:
    name: prometheus
    enabled: true
  tags:
    - prometheus-server


- name: copy alert rule files
  copy:
    src: "../files/{{item}}"
    dest: "{{ prometheus_rule_path }}/"
    validate: "{{ prometheus_daemon_dir }}/promtool check rules %s"
  loop:
    - alert-dst.rules
  notify:
    - restart prometheus
  tags:
    - prometheus-server
    - alert_rules

- name: alerting rules file
  template:
    src: "alert.rules.j2"
    dest: "{{ prometheus_rule_path }}/ansible_managed.rules"
    owner: root
    group: prometheus
    mode: 0640
    validate: "{{ prometheus_daemon_dir }}/promtool check rules %s"
  when:
    - prometheus_alert_rules != []
  notify:
    - restart prometheus
  tags:
    - prometheus-server

- name: configure prometheus
  template:
    src: "{{ prometheus_config_file }}"
    dest: "{{ prometheus_config_path }}/prometheus.yml"
    force: true
    owner: root
    group: prometheus
    mode: 0640
    validate: "{{ prometheus_daemon_dir }}/promtool check config %s"
  notify:
    - restart prometheus
  tags:
    - prometheus-server
    - alert_rules

- name: configure Prometheus web
  copy:
    content: "{{ prometheus_web_config | to_nice_yaml(indent=2,sort_keys=False) }}"
    dest: "{{ prometheus_config_path }}/web.yml"
    force: true
    owner: root
    group: prometheus
    mode: 0640
  tags:
    - prometheus-server

- name: configure prometheus static targets
  copy:
    content: |
      #jinja2: lstrip_blocks: True
      {{ item.value | to_nice_yaml(indent=2,sort_keys=False) }}
    dest: "{{ prometheus_file_sd_config_path }}/{{ item.key }}.yml"
    force: true
    owner: root
    group: prometheus
    mode: 0640
  with_dict: "{{ prometheus_targets }}"
  when: prometheus_targets != {}
  tags:
    - prometheus-server
# - name: copy prometheus custom static targets
#   copy:
#     src: "{{ item }}"
#     dest: "{{ prometheus_config_path }}"
#     force: true
#     owner: root
#     group: prometheus
#     mode: 0640
#   with_fileglob: "{{ prometheus_static_targets_files }}"
