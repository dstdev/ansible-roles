---
# tasks file for slurm-controller
- name: Install required packages
  ansible.builtin.package:
    name: "{{item}}"
    state: present
  loop:
    - zlib-devel
    - zlib
    - bzip2
    - bzip2-devel
    - openssl
    - openssl-devel
    - pkgconfig
    - wget
    - python3
    - "@Development tools"
  tags:
    - slurm_controller
    - slurm_slurmd
 
- name: Install slurmdbd requirements
  ansible.builtin.package:
    name: "{{item}}"
  when: slurm_controller
  loop:
    - mariadb-server
    - mariadb-devel
    - python2-PyMySQL
    - python36-PyMySQL
  tags:
    - slurm_controller
    - slurm_slurmd

- name: Add slurm group
  ansible.builtin.group:
    name: slurm
    gid: "{{slurm_gid}}"
    state: present
  tags:
    - slurm_controller
    - slurm_slurmd

- name: Add slurm user
  ansible.builtin.user:
    name: slurm
    comment: "Slurm account"
    uid: "{{slurm_uid}}"
    group: slurm
    state: present
    home: /var/lib/slurm
    shell: /sbin/nologin
  tags:
    - slurm_controller
    - slurm_slurmd

- name: Download slurm
  get_url:
    url: "https://download.schedmd.com/slurm/slurm-{{slurm_version}}.tar.bz2"
    dest: "/tmp/slurm-{{slurm_version}}.tar.bz2"
  register: slurm_source
  tags:
    - slurm_controller
    - slurm_slurmd


- name: extract slurm archive
  unarchive:
    copy: no
    dest: /tmp/
    src: "{{slurm_source.dest}}"
  when: slurm_source.changed
  register: slurm_source_unpack
  tags:
    - slurm_controller
    - slurm_slurmd

- name: Configure slurm
  command: "./configure --prefix=/usr --sysconfdir=/etc --localstatedir=/var --runstatedir=/run"
  args:
    chdir: "/tmp/slurm-{{slurm_version}}"
  when: slurm_source_unpack is changed
  register: slurm_configure
  tags:
    - slurm_controller
    - slurm_slurmd

- name: Install slurm
  shell: make && make install
  args:
    chdir: "/tmp/slurm-{{slurm_version}}"
  when: slurm_configure is changed
  tags:
    - slurm_controller
    - slurm_slurmd

- name: Create slurm owned directories
  file:
    state: directory
    path: "{{item}}"
    owner: slurm
    group: slurm
  loop:
    - /var/run/slurm
    - /var/log/slurm
    - /var/spool/slurm
  tags:
    - slurm_controller
    - slurm_slurmd

- name: Create slurmctld service file
  ansible.builtin.template:
    src: templates/slurmctld.service.j2
    dest: /etc/systemd/system/slurmctld.service
    owner: root
    group: root
    mode: "0644"
  when: slurm_controller
  tags:
    - slurm_controller

- name: Start slurmctld service
  ansible.builtin.service:
    name: slurmctld
    state: started
    enabled: true
  when: slurm_controller
  tags:
    - slurm_controller

- name: Create configuration file
  ansible.builtin.template:
    src: templates/slurm.conf.j2
    dest: /etc/slurm.conf
    owner: root
    group: root
    mode: "0644"
  when: slurm_controller
  notify:
      - Restart slurmctld
  tags:
    - slurm_controller

- name: Start mariadb
  ansible.builtin.service:
    name: mariadb
    state: started
    enabled: true
  when: slurm_controller
  tags:
    - slurm_controller

- name: create slurmdbd service file
  ansible.builtin.template:
    src: templates/slurmdbd.service.j2
    dest: /etc/systemd/system/slurmdbd.service
    owner: root
    group: root
    mode: "0644"
  when: slurm_controller
  tags:
    - slurm_controller

- name: Start slurmdbd service
  ansible.builtin.service:
    name: slurmdbd
    state: started
    enabled: true
  when: slurm_controller
  tags:
    - slurm_controller

- name: Create database user slurm
  community.mysql.mysql_user:
    name: slurm
    encrypted: yes
    priv: '*.*:ALL'
    state: present
  when: slurm_controller
  tags:
    - slurm_controller


- name: Create slurmdbd configuration file
  ansible.builtin.template:
    src: templates/slurmdbd.conf.j2
    dest: /etc/slurmdbd.conf
    owner: slurm
    group: slurm
    mode: "0600"
  when: slurm_controller
  notify:
      - Restart slurmdbd
  tags:
    - slurm_controller

- name: Create cgroup configuration file
  ansible.builtin.template:
    src: templates/cgroup.conf.j2
    dest: /etc/cgroup.conf
    owner: slurm
    group: slurm
    mode: "0644"
  when: slurm_controller
  notify:
      - Restart slurmd
  tags:
    - slurm_controller


- name: create slurmd service file
  ansible.builtin.template:
    src: templates/slurmd.service.j2
    dest: /etc/systemd/system/slurmd.service
    owner: root
    group: root
    mode: "0644"
  when: slurm_slurmd
  tags:
    - slurm_slurmd

- name: Start slurmd service
  ansible.builtin.service:
    name: slurmd
    state: started
    enabled: true
  when: slurm_slurmd and not ansible_is_chroot
  tags:
    - slurm_slurmd

- name: Enable slurmd on image
  ansible.builtin.shell: systemctl enable slurmd
  when: ansible_is_chroot
  tags:
    - slurm_slurmd


